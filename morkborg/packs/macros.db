{"name":"Roll Ranged Attack","permission":{"default":0,"8QfnnigptLAIYO7c":3},"type":"script","flags":{},"scope":"global","command":"// getting all actors of selected tokens\r\nlet actors = canvas.tokens.controlled.map(({ actor }) => actor);\r\n// TODO make sure only legal targets can do this.\r\n\r\n// if there are no selected tokens, roll for the player's character.\r\nif (actors.length < 1) {\r\n    actors.push(game.user.character);\r\n}\r\nconst validActors = actors.filter(actor => actor != null);\r\n\r\nif (validActors.length !== 1) {\r\n    ui.notifications.warn(\"No selected tokens or Charater set for user.\");\r\n} else {\r\n    let actor = validActors[0];\r\n    let mod = actor.data.data.abilities.presence.value;\r\n\r\n    let roll = new Roll(\"1d20+\"+mod, actor.actorData);\r\n\r\n    // create the message\r\n    roll.roll().toMessage({\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n        flavor: \"<b>Rolling Ranged Attack</b>\"\r\n    });\r\n}\r\n","author":"8QfnnigptLAIYO7c","img":"systems/morkborg/icons/ui/bow-arrow.svg","actorIds":[],"_id":"0i86MRLgFTlyj3TL"}
{"name":"Roll Defense","permission":{"default":0,"8QfnnigptLAIYO7c":3},"type":"script","flags":{},"scope":"global","command":"// getting all actors of selected tokens\r\nlet actors = canvas.tokens.controlled.map(({ actor }) => actor);\r\n// TODO make sure only legal targets can do this.\r\n\r\n// if there are no selected tokens, roll for the player's character.\r\nif (actors.length < 1) {\r\n    actors.push(game.user.character);\r\n}\r\nconst validActors = actors.filter(actor => actor != null);\r\n\r\nif (validActors.length !== 1) {\r\n    ui.notifications.warn(\"No selected tokens or Charater set for user.\");\r\n} else {\r\n    let actor = validActors[0];\r\n    let mod = actor.data.data.abilities.agility.value;\r\n\r\n    let roll = new Roll(\"1d20+\"+mod, actor.actorData);\r\n\r\n    // create the message\r\n    roll.roll().toMessage({\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n        flavor: \"<b>Rolling Defense</b>\"\r\n    });\r\n}\r\n","author":"8QfnnigptLAIYO7c","img":"icons/svg/shield.svg","actorIds":[],"_id":"26U3csZPa4UFaQZz"}
{"_id":"2pTg1xVR1hw4EmpW","name":"Shape Shift","permission":{"default":0,"8QfnnigptLAIYO7c":3},"type":"script","flags":{},"scope":"global","command":"// Allows swapping between two different .png images.\r\n// Token sides should have \"a\" and \"b\" at the end of the name like \"name-a.png\" and \"name-b.png\".\r\n// If you have a different ending, change aName and bName respectively.\r\n// Author: Phenomen\r\n\r\n// IMPORTANT. These two values MUST be the same length.\r\nlet aName = 'a.webp'\r\nlet bName = 'b.webp'\r\n\r\nlet tok = canvas.tokens.controlled[0];\r\nlet img = tok.data.img;\r\nvar currentSide = img[img.length - aName.length];\r\nimg = img.slice(0,-Math.abs(aName.length)) + (currentSide == 'a' ? bName: aName);\r\ntok.update({ img });","author":"8QfnnigptLAIYO7c","img":"icons/svg/ice-aura.svg","actorIds":[]}
{"name":"Roll Melee Attack","permission":{"default":0,"8QfnnigptLAIYO7c":3},"type":"script","flags":{},"scope":"global","command":"// getting all actors of selected tokens\r\nlet actors = canvas.tokens.controlled.map(({ actor }) => actor);\r\n// TODO make sure only legal targets can do this.\r\n\r\n// if there are no selected tokens, roll for the player's character.\r\nif (actors.length < 1) {\r\n    actors.push(game.user.character);\r\n}\r\nconst validActors = actors.filter(actor => actor != null);\r\n\r\nif (validActors.length !== 1) {\r\n    ui.notifications.warn(\"No selected tokens or Charater set for user.\");\r\n} else {\r\n    let actor = validActors[0];\r\n    let mod = actor.data.data.abilities.strength.value;\r\n\r\n    let roll = new Roll(\"1d20+\"+mod, actor.actorData);\r\n\r\n    // create the message\r\n    roll.roll().toMessage({\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n        flavor: \"<b>Rolling Mele Attack</b>\"\r\n    });\r\n}\r\n","author":"8QfnnigptLAIYO7c","img":"icons/svg/sword.svg","actorIds":[],"_id":"cF6cI2Xly7RQzHqZ"}
{"_id":"etbvYTxELn7a6Id6","name":"Share Image Via URL","permission":{"default":0,"cDO0DyrXmparuNF5":3},"type":"script","flags":{},"scope":"global","command":"/**\r\n * Share an image to all players when you have an image URL\r\n * Author: @Krishmero#1792\r\n */\r\n\r\nlet imagePopup = (imageUrl) => {\r\n\t// Display the image popout and share it.\r\n\tconst ip = new ImagePopout(imageUrl);\r\n\tip.render(true);\r\n\tip.shareImage();\r\n};\r\n\r\nlet chatDialog = (imageUrl) => {\r\n\tChatMessage.create({\r\n\t\tuser: game.user._id,\r\n\t\tcontent: `<img src=\"${imageUrl}\" />`,\r\n\t\ttype: CONST.CHAT_MESSAGE_TYPES.OOC\r\n\t});\r\n};\r\n\r\nlet selectOptions = game.user.isGM ? `\r\n<div style=\"display: inline-block; width: 100%; margin-bottom: 10px\">\r\n\t<label for=\"output-options\" style=\"margin-right: 10px\">Output Options:</label>\r\n\t<select id=\"output-options\" />\r\n\t\t<option value=\"popup\">Popup</option>\r\n\t\t<option value=\"chat\">Chat</option>\r\n\t\t<option value=\"both\">Both</option>\r\n\t</select>\r\n</div>\r\n<br />\r\n` : '';\r\n\r\nnew Dialog({\r\n\ttitle: `Share Image via URL`,\r\n\tcontent: `\r\n\t\t<form>\r\n\t\t\t${selectOptions}\r\n\t\t\t<div style=\"display: flex; width: 100%; margin-bottom: 10px\">\r\n\t\t\t\t<label for=\"image-url\" style=\"white-space: nowrap; margin-right: 10px; padding-top:4px\">Image URL:</label>\r\n\t\t\t\t<input type=\"text\" id=\"image-url\" name=\"image-url\" />\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t`,\r\n\tbuttons: {\r\n\t\tyes: {\r\n\t\t\ticon: \"<i class='fas fa-check'></i>\",\r\n\t\t\tlabel: `Share`,\r\n\t\t\tcallback: (html) => {\r\n\t\t\t\tlet imageUrl = html.find('#image-url').val();\r\n\t\t\t\tlet permission = html.find('select#output-options')[0]?.value || null;\r\n\t\t\t\tif (!imageUrl) {\r\n\t\t\t\t\treturn ui.notifications.info(\"You did not provide a valid image.\");\r\n\t\t\t\t}\r\n\t\t\t\tif (game.user.isGM && ['popup', 'both'].includes(permission)) {\r\n\t\t\t\t\timagePopup(imageUrl);\r\n\t\t\t\t}\r\n\t\t\t\tif (!game.user.isGM || ['chat', 'both'].includes(permission)) {\r\n\t\t\t\t\tchatDialog(imageUrl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tno: {\r\n\t\t\ticon: \"<i class='fas fa-times'></i>\",\r\n\t\t\tlabel: `Cancel`\r\n\t\t},\r\n\t},\r\n\tdefault: \"yes\"\r\n}).render(true)\r\n","author":"cDO0DyrXmparuNF5","img":"icons/svg/wall-direction.svg","actorIds":[]}
{"_id":"gLZEjtb9hTCHla5Z","name":"Show Token Artwork","permission":{"default":0,"cDO0DyrXmparuNF5":3},"type":"script","flags":{},"scope":"global","command":"/**\r\n * Macro showing Character's Artwork for selected token\r\n *\r\n * @author Forien#2130\r\n * @url https://patreon.com/forien\r\n * @licence MIT\r\n */\r\n\r\nif (token === undefined) {\r\n  ui.notifications.warn(\"Please select token first.\");\r\n} else {\r\n  let tActor = token.actor;\r\n  let ip = new ImagePopout(tActor.data.img, {\r\n    title: tActor.name,\r\n    shareable: true,\r\n    uuid: tActor.uuid\r\n  }).render(true);\r\n  ip.shareImage();\r\n}\r\n","author":"cDO0DyrXmparuNF5","img":"icons/svg/blind.svg","actorIds":[]}
{"name":"Show/Hide Tiles","permission":{"default":0,"8QfnnigptLAIYO7c":3},"type":"chat","flags":{},"scope":"global","command":"if (canvas.tiles.visible) {\r\n    canvas.tiles.visible = false\r\n} else {\r\n    canvas.tiles.visible = true\r\n}","author":"8QfnnigptLAIYO7c","img":"icons/svg/blind.svg","actorIds":[],"_id":"kjEFQOdfEz9fN5M4"}
{"name":"Class Import","permission":{"default":0,"cDO0DyrXmparuNF5":3},"type":"script","flags":{"furnace":{"runAsGM":false}},"scope":"global","command":"( async () => {\r\n  const classesPack = game.packs.find(p => p.collection === `morkborg.classes`);\r\n  const classesResponse = await fetch(`systems/morkborg/compendium/classes.json`);\r\n  const classesContent = await classesResponse.json();\r\n  const classesItems = await Item.create(classesContent, {temporary: true});\r\n\r\n  console.log(classesPack);\r\n  let packIndex = await classesPack.getIndex();\r\n\r\n  for ( let i of classesItems ) {\r\n    let searchResult = packIndex.find((el) => el.name == i.name);\r\n    if (searchResult != undefined) {\r\n      console.log(`Item ${i.name} already exits, skipping`);\r\n    } else {\r\n      await classesPack.importEntity(i);\r\n      console.log(`Imported Item ${i.name} into Compendium classesPack ${classesPack.collection}`);\r\n    }\r\n\r\n  }\r\n})()","author":"cDO0DyrXmparuNF5","img":"icons/svg/down.svg","actorIds":[],"_id":"ubPr7Cks8PkJi9vt"}
{"_id":"woQbpryShWkIoUVi","name":"Light Picker","permission":{"default":0,"cDO0DyrXmparuNF5":3},"type":"script","flags":{},"scope":"global","command":"let dialogEditor = new Dialog({\r\n  title: `Token Light Picker`,\r\n  content: `Pick the light source the selected token is holding.`,\r\n  buttons: {\r\n    none: {\r\n      label: `None`,\r\n      callback: () => {\r\n        token.update({\"dimLight\": 0, \"brightLight\": 0, \"lightAngle\": 360,});\r\n        dialogEditor.render(true);\r\n      }\r\n    },\r\n    torch: {\r\n      label: `Torch`,\r\n      callback: () => {\r\n        token.update({\"dimLight\": 40, \"brightLight\": 20, \"lightAngle\": 360,});\r\n        dialogEditor.render(true);\r\n      }\r\n    },\r\n    lamp: {\r\n      label: `Lamp`,\r\n      callback: () => {\r\n        token.update({\"dimLight\": 45, \"brightLight\": 15, \"lightAngle\": 360,});\r\n        dialogEditor.render(true);\r\n      }\r\n    },\r\n    bullseye: {\r\n      label: `Bullseye Lantern`,\r\n      callback: () => {\r\n        token.update({\"dimLight\": 120, \"brightLight\": 60, \"lightAngle\": 45,});\r\n        dialogEditor.render(true);\r\n      }\r\n    },\r\n    hoodedOpen: {\r\n      label: `Hooded Lantern (Open)`,\r\n      callback: () => {\r\n        token.update({\"dimLight\": 60, \"brightLight\": 30, \"lightAngle\": 360,});\r\n        dialogEditor.render(true);\r\n      }\r\n    },\r\n    hoodedClosed: {\r\n      label: `Hooded Lantern (Closed)`,\r\n      callback: () => {\r\n        token.update({\"dimLight\": 5, \"brightLight\": 0, \"lightAngle\": 360,});\r\n        dialogEditor.render(true);\r\n      }\r\n    },\r\n    close: {\r\n      icon: \"<i class='fas fa-tick'></i>\",\r\n      label: `Close`\r\n    },\r\n  },\r\n  default: \"close\",\r\n  close: () => {}\r\n});\r\n\r\ndialogEditor.render(true)\r\n","author":"cDO0DyrXmparuNF5","img":"icons/svg/explosion.svg","actorIds":[]}
